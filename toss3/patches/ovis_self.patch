diff --git a/lib/src/ovis_util/test_util.c b/lib/src/ovis_util/test_util.c
index 8fa9c64..f561f6a 100644
--- a/lib/src/ovis_util/test_util.c
+++ b/lib/src/ovis_util/test_util.c
@@ -115,6 +115,12 @@ int main(int argc, char **argv)
 		errcnt++;
 	}
 
+	int i;
+	for (i = 1; i < argc; i++) {
+		rc = ovis_host_is_self(argv[i]);
+		printf("host %s isself %d\n", argv[i], rc);
+	}
+
 	printf("expect crash soon\n");
 	r = ovis_join(NULL,s1,s2,s3); // unterminated list
 	if (r) {
diff --git a/lib/src/ovis_util/util.c b/lib/src/ovis_util/util.c
index 62c9088..0b287bd 100644
--- a/lib/src/ovis_util/util.c
+++ b/lib/src/ovis_util/util.c
@@ -945,93 +945,61 @@ const char* ovis_errno_abbvr(int e)
 #include <sys/socket.h>
 #include <netdb.h>
 #include <ifaddrs.h>
-#include <string.h>
-#include <stdio.h>
-#include <stdlib.h>
 #include <unistd.h>
 #include <linux/if_link.h>
 
 int ovis_host_is_self(const char *remote)
 {
-	struct ifaddrs *ifaddr, *ifa;
-	int family, s, n;
-	char host[NI_MAXHOST];
 	if (!remote) {
 		return EINVAL;
 	}
-	/* not any loopback number ?*/
-	if (!(strncmp(remote, "127." , 4)))
-		return 1;
 
-	/* not any alias from hosts file ?*/
-	struct hostent *h, he;
-	h = &he;
-#define BSZ 20000
-	char buf[BSZ];
-	int gherrno;
-	struct hostent *ghr = NULL;
-	int gherr = gethostbyname_r(remote, h, buf, BSZ, &ghr, &gherrno);
-	if (!gherr) {
-		int nh = 0;
-		 while (h->h_aliases[nh] != NULL) {
-			 if (!strcmp(remote, h->h_aliases[nh])) {
-				 return 1;
-			 }
-			 nh++;
-		 }
+	/* dig up remote ip */
+	struct addrinfo hi, *si, *p;
+	struct sockaddr_in *h;
+	int rv;
+
+	memset(&hi, 0, sizeof hi);
+	hi.ai_family = AF_UNSPEC;
+	hi.ai_socktype = SOCK_STREAM;
+
+	if ( (rv = getaddrinfo( remote , NULL , &hi , &si)) != 0) 
+	{
+		return 0;
 	}
 
-	/* not self in dns registration */
+	char rhost[NI_MAXHOST];
+	/* dig up local addrs */
+	struct ifaddrs *ifaddr, *ifa;
+	int family, n;
+
 	if (getifaddrs(&ifaddr) == -1) {
 		return 0;
 	}
 
-	/* Walk through linked list, maintaining head pointer so we
-	can free list later */
 	int rc = 0;
-	for (ifa = ifaddr, n = 0; ifa != NULL; ifa = ifa->ifa_next, n++) {
-		if (ifa->ifa_addr == NULL) {
-			continue;
-		}
-		family = ifa->ifa_addr->sa_family;
-		if (family != AF_INET) {
-			continue;
-		}
-
-		s = getnameinfo(ifa->ifa_addr, sizeof(struct sockaddr_in),
-			host, NI_MAXHOST, NULL, 0, 0);
-		if (s != 0) {
-			rc = ENOENT;
-			break;
-		}
-		if (!(strcmp(remote, host))) {
-			rc = 1;
-			break;
-		}
-
-		s = getnameinfo(ifa->ifa_addr, sizeof(struct sockaddr_in),
-			host, NI_MAXHOST, NULL, 0, NI_NUMERICHOST);
-		if (s != 0) {
-			rc = ENOENT;
-			break;
-		}
-		if (!(strcmp(remote, host))) {
-			rc = 1;
-			break;
-		}
+	for(p = si; p != NULL; p = p->ai_next) 
+	{
+		h = (struct sockaddr_in *) p->ai_addr;
+		strcpy(rhost , inet_ntoa( h->sin_addr ) );
+		for (ifa = ifaddr, n = 0; ifa != NULL; ifa = ifa->ifa_next, n++) {
+			if (ifa->ifa_addr == NULL) {
+				continue;
+			}
+			family = ifa->ifa_addr->sa_family;
+			if (family != AF_INET) {
+				continue;
+			}
 
-		s = getnameinfo(ifa->ifa_addr, sizeof(struct sockaddr_in),
-			host, NI_MAXHOST, NULL, 0, NI_NOFQDN);
-		if (s != 0) {
-			rc = ENOENT;
-			break;
-		}
-		if (!(strcmp(remote, host))) {
-			rc = 1;
-			break;
+			struct sockaddr_in *pAddr = (struct sockaddr_in *)ifa->ifa_addr;
+			if (!strcmp(rhost, inet_ntoa(pAddr->sin_addr))) {
+				rc = 1;
+				break;
+			}
 		}
 	}
 
+	freeaddrinfo(si);
 	freeifaddrs(ifaddr);
 	return rc;
 }
diff --git a/lib/src/ovis_util/util.h b/lib/src/ovis_util/util.h
index 58117c6..a39bc90 100644
--- a/lib/src/ovis_util/util.h
+++ b/lib/src/ovis_util/util.h
@@ -225,8 +225,9 @@ int ovis_join_buf(char *buf, size_t buflen, char *joiner, ...);
 
 /**
  * \brief check a hostname for being a name of current host.
+ * Checks the remote ip address of host given against local ip addrs.
  * \param host name to check.
- * \return 0 if apparently not the current host, 1 if host.
+ * \return 0 if apparently not the current host, 1 if host, errno if neither.
  */
 int ovis_host_is_self(const char *host);
 
